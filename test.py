# -*- coding: utf-8 -*-
"""Test.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hTK0mhkDLqwRnftJIDHr6w9NAvtylLI1
"""

import sys
from keras.preprocessing.sequence import pad_sequences
from keras.models import load_model
#from keras.models import Sequential
#from keras.layers import Dense, Masking, LSTM, Dropout
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import MinMaxScaler
import numpy as np
import tensorflow
import tensorflow as tf
#from keras.optimizers import Adam
#from keras import backend as K
import matplotlib.pyplot as plt
import pickle

inputfile = sys.argv[1]
scalerfile = 'scaler.sav'
scaler = pickle.load(open(scalerfile, 'rb'))
prediction_data = np.load(inputfile)
test_target= prediction_data[:, :,[1]]
test_input= prediction_data[:, :,[0,2,3,4,5,6]]

testarray=np.array(test_input)
n = np.any(testarray, -1)
testarray[n] = scaler.transform(testarray[n])

model = load_model('model.h5')
predWeight = model.predict(testarray)
for seq in range(len(test_target)):
  #print(seq)
  for i in range(len(test_target[seq,:,:])):
    if test_target[seq,i,0] == 0:
      #print(i)
      predWeight[seq,i:,:] = 0.0
      
np.save('target_output.npy',predWeight)